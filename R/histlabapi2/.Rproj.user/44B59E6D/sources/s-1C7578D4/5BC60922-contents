---
title: "R API"
author: "Raymond Hicks"
date: "9/17/2020"
output: slidy_presentation
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache=FALSE, tidy=TRUE, tidy.opts = list(blank = FALSE, width.cutoff=60, size='small'))
knitr::opts_knit$set(root.dir='c:/Users/arpie/Documents/GitHub/APIpackages/R/histlabapi2/')
knitr::read_chunk('c:/Users/arpie/Documents/GitHub/APIpackages/R/histlabapi2/R/histlabapi_date.R')
require(jsonlite)
source('c:/Users/arpie/Documents/GitHub/APIpackages/R/histlabapi2/R/histlabapi_utils.R')

```
```{css, echo = FALSE}
pre code {
  white-space: pre-wrap;
}
```
## New PostgREST API 
(Thanks to Ben)

### More flexible 

- Simpler queries

- Easier to add new queries



## Suggested R functions to call API

### 1. Search queries
- By date
- By id
- By full text
- By entity

## 2. Overview queries

- All possible collections
- All possible fields
- Top topics, countries, entities
<ul>
- By collection and across collections
</ul>


## Syntax

The search queries all share a similar syntax:

- date option: Exact date or date range

- fields: Database columns to return

<ul>
- Default: doc_id, authored, title</ul> 

- entity.type: Topics, Countries, Persons

- limit: Number of results to return

### To come
- Collection


```{r dateload, echo = FALSE}
hlapi_date<-function(date=NULL,start.date=NULL,end.date=NULL,fields=NULL,coll.name=NULL, entity.type=NULL, limit = 25,run=FALSE,...){
  url<-"http://api.foiarchive.org/docs?"
  notice<-NULL

  if(is.null(date)&(is.null(start.date)&is.null(end.date))) stop('You must supply either a date or start and end dates for a date search.')

  ## ADD CHECK DATES - START.DATE, END.DATE, DATE all possibilities
  if(!is.null(date)&(!is.null(start.date)|!is.null(end.date))){
    if(is.null(notice)) notice<-"You cannot specify both a date and a start or end date." else notice<-paste0(notice,"\nYou cannot specify both a date and a start or end date.")
  }
  if(!is.null(start.date)&is.null(end.date)){
    if(is.null(notice)) notice<-"Please specify an end date." else notice<-paste0(notice,"\nPlease specify an end date.")
  }
  if(!is.null(end.date)&is.null(start.date)){
    if(is.null(notice)) notice<-"Please specify a start date." else notice<-paste0(notice,"\nPlease specify a start date.")
  }

  if(!is.null(notice)){
    stop(notice, call.=FALSE)
  }
  if(!is.null(date)) {
    d<-ck_date(date)
    url<-paste0(url,"authored=eq.",d)
  }

  if(!is.null(start.date)) {
    s<-ck_date(start.date)
    url<-paste0(url,"authored=gte.",s)

  }

  if(!is.null(end.date)) {
    e<-ck_date(end.date)
    url<-paste0(url,"&authored=lte.",e)
    if(as.Date(s,date.format="%y-%m-%d")>as.Date(e,date.format="%y-%m-%d")){
      stop('Start date must be less than or equal to end date.', call.=FALSE)
    }

  }

    if(is.null(fields)){
      fields = c('doc_id','authored','title')
    }

    # Check fields if fields entered
    if(!is.null(fields)){
      fields<-ck_list(fields)
      f<-ck_fields(fields)
      if(!is.null(f)) stop(f, call.=FALSE)
    }
    url<-paste0(url,"&select=",paste(unlist(fields), collapse=','))

  #Check collections if collections entered
  if(!is.null(coll.name)){
    coll.name<-ck_list(coll.name)
    f<-ck_collections(coll.name)
    if(!is.null(f)) stop(f, call.=FALSE)
    url<-paste0(url,"&collections=",paste(unlist(coll.name), collapse=','))
  }
  if(!is.null(entity.type)) {
    url<-ck_entities(url,entity.type)
  }

  url<-paste0(url,"&limit=",limit)

  if(run){
      return(hlresults(url))
  }
  if(!run){
    return(url)
  }
}


```
## Date search
```{r date , echo = TRUE}

hlapi_date(date='1980-09-17', fields=c("doc_id","classification","title"))

hlapi_date(date='1980-09-17', fields=c("doc_id","classification","title"), run=TRUE)

```
## Date search with entities
```{r date2, echo=TRUE}
hlapi_date(date='1980-09-17', fields=c("doc_id","classification","title"), entity.type=c("topics","countries"), run=TRUE)

```

```{r textload , echo = FALSE}
hlapi_search<-function(s.text, fields=NULL, entity.type=NULL, or = FALSE, start.date=NULL,end.date=NULL, limit = 25,run=NULL,...){
  url<-"http://api.foiarchive.org/docs?"
  search<-NULL
  notice<-NULL
  if(missing(s.text)){
    if(is.null(notice)) notice <- "Please supply a search term" else notice<-paste0(notice,"\nPlease supply a search term")
  }

#if(is.null(coll.name)){
#  if(is.null(notice)) notice<-"The name of at least one collection is necessary for a full-text search." else notice<-paste0(notice,"\nThe name of at least one collection is necessary for a full-text search.")
#  #stop(notice)
#  }
  if(is.null(fields)){
    fields = c('doc_id','authored','title')
  }
  if(!is.null(fields)){
    fields<-ck_list(fields)
    f<-ck_fields(fields)
    if(!is.null(f)) stop(f)
  }


#  coll.name<-ck_list(coll.name)
#    f<-ck_collections(coll.name)
#  if(!is.null(f)) {
#    if(is.null(notice)) notice<-f else notice<-paste0(notice,"\n",f)
#  }

    if(!is.null(start.date)&is.null(end.date)){
      if(is.null(notice)) notice<-"Please specify an end date." else notice<-paste0(notice,"\nPlease specify an end date.")
    }
    if(!is.null(end.date)&is.null(start.date)){
      if(is.null(notice)) notice<-"Please specify a start date." else notice<-paste0(notice,"\nPlease specify a start date.")
    }

    if(!is.null(notice)){
      stop(notice)
    }
    #print(length(s.text))
    if(length(s.text)>1 & isTRUE(or)){
      s.text<-gsub("\\s+","%20",s.text)
      url<-paste0(url,"full_text=wfts.",paste(unlist(s.text), collapse='%20or%20'))

    }
    if(length(s.text)==1 & isTRUE(or) | (!isTRUE(or))){
    s.text<-gsub("\\s+","%20",s.text)
    url<-paste0(url,"full_text=wfts.",paste(unlist(s.text), collapse='%20'))
    #url<-paste0(url,"full_text=wfts.",s.text)
    }

    url<-paste0(url,"&select=",paste(unlist(fields), collapse=','))
    if(!is.null(entity.type)) {
      url<-ck_entities(url,entity.type)
    }

    #url<-paste0(url,"&collections=",paste(unlist(coll.name), collapse=','))

      if(!is.null(end.date)&!is.null(start.date)){
  s<-ck_date(start.date)
  e<-ck_date(end.date)

  if(as.Date(s,date.format="%y-%m-%d")>as.Date(e,date.format="%y-%m-%d")){
    stop('Start date must be less than or equal to end date.')
  }
  url<-paste0(url,"&authored=gte.",paste(s, collapse=','))

  url<-paste0(url,"&authored=lte.",paste(e, collapse=','))
  }
  url<-paste0(url,"&limit=",limit)


    if(isTRUE(run)){
      return(hlresults(url))
    }
  if(!isTRUE(run)){
    return(url)
  }
}


```

## Full-text search
- How do we search for more than one token?
- Default is "and" 
- So we add "or" option

```{r text , echo = TRUE, error=TRUE}

hlapi_search(c('udeac','asean'), run=TRUE)
hlapi_search(c('udeac','asean'), or=TRUE, run=TRUE, limit = 5)

```


## Next steps

- Entity searches: 
<ul>
- How do we search for topics or persons without knowing exact name?
</ul>
- Overview queries
<ul>
- Still to be incorporated
</ul>
